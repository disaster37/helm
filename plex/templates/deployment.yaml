apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "plex.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "plex.name" . }}
    helm.sh/chart: {{ include "plex.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "plex.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "plex.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      {{- if .Values.securityContext.enabled }}
      securityContext:
        fsGroup: {{ .Values.plex.plex_gid }}
        runAsUser: {{ .Values.plex.plex_uid }}
        runAsGroup: {{ .Values.plex.plex_gid }}
      {{- else }}
      initContainers:
        - name: volume-permissions
          image: alpine:latest
          imagePullPolicy: IfNotPresent
          command: ['sh', '-c', 'chmod -R g+rwX /data']
          volumeMounts:
            - mountPath: /data
              name: ghost-data
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: HOSTNAME
              value: {{ .Values.plex.hostname }}
            {{- with .Values.plex.tz }}
            - name: TZ
              value: {{ .Values.plex.tz }}
            {{- end }}
            {{- with .Values.plex.advertise_ip }}
            - name: ADVERTISE_IP
              value: {{ .Values.plex.advertise_ip}}
            {{- end }}
            {{- with .Values.plex.plex_claim }}
            - name: PLEX_CLAIM
              value: {{ .Values.plex.plex_claim }}
            {{- end }}
            - name: PLEX_UID
              value: {{ .Values.plex.plex_uid }}
            - name: PLEX_GID
              value: {{ .Values.plex.plex_gid}}
            {{- with .Values.plex.change_config_dir_ownership }}
            - name: CHANGE_CONFIG_DIR_OWNERSHIP
              value: {{ .Values.plex.change_config_dir_ownership }}
            {{- end }}
            {{- with .Values.plex.allowed_networks }}
            - name: ALLOWED_NETWORKS
              value: {{ .Values.plex.allowed_networks }}
            {{- end }}
          ports:
            - name: http
              containerPort: 32400
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
              initialDelaySeconds: 120
              timeoutSeconds: 5
              failureThreshold: 6
          readinessProbe:
            httpGet:
              path: /
              port: http
              initialDelaySeconds: 30
              timeoutSeconds: 3
              periodSeconds: 5
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: plex-data
              mountPath: /config
              subPath: config
            - name: plex-data
              mountPath: /transcode
              subPath: transcode
            - name: plex-data
              mountPath: /data
              subPath: data
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
        - name: plex-data
          persistentVolumeClaim:
            claimName: {{ include "plex.fullname" . }}
